import 'package:dartz/dartz.dart';

import '../../../core/error/failures.dart';
import '../../../core/usecases/usecase.dart';
import '../entities/checklists_stream.dart';

abstract class CheckListsRepository {
  ///Gets stream of all checklists from the DB.
  ///
  ///Takes [String] company id as a params.
  ///
  ///Returns [ChecklistsStream] if operation is successful.
  ///Returns [Failure] if operation is unsuccessful.
  Future<Either<Failure, ChecklistsStream>> getChecklistsStream(
    String params,
  );

  ///Adds new checklist to the DB.
  ///
  ///Returns [String] containing generated by DB checklist id.
  ///Returns [Failure] if operation is unsuccessful.
  Future<Either<Failure, String>> addChecklist(ChecklistParams params);

  ///Updates checklist in the DB.
  ///
  ///Returns [VoidResult] if operation is successful.
  ///Returns [Failure] if operation is unsuccessful.
  Future<Either<Failure, VoidResult>> updateChecklist(ChecklistParams params);

  ///Deletes checklist from the DB.
  ///
  ///Returns [VoidResult] if operation is successful.
  ///Returns [Failure] if operation is unsuccessful.
  Future<Either<Failure, VoidResult>> deleteChecklist(ChecklistParams params);
}
